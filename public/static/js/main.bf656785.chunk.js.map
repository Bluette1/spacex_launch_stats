{"version":3,"sources":["logo.png","components/LaunchItem.js","components/Missionkey.js","components/Launches.js","components/Launch.js","App.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","launches","map","uuid","LAUNCH_QUERY","Launch","flightNumber","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","App","src","logo","alt","style","width","display","margin","exact","path","component","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf656785.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\n\nexport default function LaunchItem({\n  launch: { flight_number, mission_name, launch_date_local, launch_success },\n}) {\n  return (\n    <div className=\"card card-body mb-3\">\n      <div className=\"row\">\n        <div className=\"col-md-9\">\n          <h4>\n            Mission:&nbsp;\n            <span\n              className={classNames({\n                'text-success': launch_success,\n                'text-danger': !launch_success,\n              })}\n            >\n              {mission_name}\n            </span>\n          </h4>\n          <p>\n            Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\n            Launch Details\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function \n() {\n  return (\n    <div className=\"my-3\">\n      <p>\n        <span className=\"px-3 mr-2 bg-success\"/> = Success\n      </p>\n\n      <p>\n        <span className=\"px-3 mr-2 bg-danger\"/> = Fail\n      </p>\n      \n    </div>\n  );\n}\n","import React, { Fragment } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport uuid from 'react-uuid';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './Missionkey';\n\nconst LAUNCHES_QUERY = gql`\n  query launchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nconst Launches = () => {\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{`Error :( ${error}`}</p>;\n\n  return (\n    <Fragment>\n      <h4 className=\"display-4 my-3\">Launches</h4>\n      <MissionKey/>\n      <Fragment>\n        {data.launches.map((launch) => (\n          <LaunchItem key={ `${launch.flight_number}-${uuid()}`} launch={launch} />\n        ))}\n      </Fragment>\n    </Fragment>\n  );\n};\n\nexport default Launches;\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { gql, useQuery } from '@apollo/client';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n  query launchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\n\nconst Launch = ({\n  match: {\n    params\n  },\n}) => {\n  let flightNumber = params.flight_number;\n  flightNumber = parseInt(flightNumber);\n  const { loading, error, data } = useQuery(LAUNCH_QUERY, {\n    variables: { flight_number: flightNumber },\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{`Error :( ${error}`}</p>;\n\n  const {\n    flight_number,\n    mission_name,\n    launch_year,\n    launch_success,\n    rocket: { rocket_id, rocket_name, rocket_type },\n  } = data.launch;\n\n\n  return < div>\n  <h1 className=\"display-4 my-3\">\n  <span className=\"text-dark\">Mission: </span>\n  {mission_name}\n  </h1>\n  <h4 className=\"mb-3\">Launch Details</h4>\n  <ul className=\"list-group\">\n    <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n    <li className=\"list-group-item\">Launch Year: {launch_year}</li>\n    <li className=\"list-group-item\">Launch Success:&nbsp;\n    <span className={classNames({\n      'text-success': launch_success,\n      'text-danger': !launch_success,\n    })}>\n    {launch_success ? 'Yes' : 'No'}</span> </li>\n  </ul>\n  <h4 className=\"my-3\">Rocket Details</h4>\n  <ul className=\"list-group\">\n    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n    <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n    <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n  </ul>\n  <hr/>\n  <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n  </div>;\n};\n\nexport default Launch;\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport logo from './logo.png';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <img\n        src={logo}\n        alt=\"SpaceX\"\n        style={{ width: 300, display: 'block', margin: 'auto' }}\n      />\n      <Route exact path=\"/\" component={Launches}></Route>\n      <Route exact path=\"/launch/:flight_number\" component={Launch}></Route>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport './index.css';\nimport App from './App';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}